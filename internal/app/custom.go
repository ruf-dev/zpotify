// Code generated by RedSock CLI.
// DO EDIT, DON'T DELETE THIS FILE.

package app

import (
	"context"

	"go.redsock.ru/rerrors"
	"golang.org/x/sync/errgroup"

	"go.zpotify.ru/zpotify/internal/transport/telegram"
	"go.zpotify.ru/zpotify/internal/transport/zpotify_api_impl"
	"go.zpotify.ru/zpotify/pkg/docs"
)

type Custom struct {
	grpcImpl *zpotify_api_impl.Impl

	telegram *telegram.Server
}

func (c *Custom) Init(a *App) error {
	c.telegram = telegram.NewServer(a.Cfg, a.Telegram)

	c.grpcImpl = zpotify_api_impl.New()

	a.ServerMaster.AddImplementation(c.grpcImpl)
	a.ServerMaster.AddHttpHandler(docs.Swagger())

	return nil
}

// Start - launch custom handlers
// Even if you won't use it keep it for proper work
func (c *Custom) Start(ctx context.Context) error {

	eg, ctx := errgroup.WithContext(ctx)

	eg.Go(func() error {
		return c.telegram.Start(ctx)
	})

	err := eg.Wait()
	if err != nil {
		return rerrors.Wrap(err)
	}

	return nil
}

// Stop - gracefully stop custom handlers
// Even if you won't use it keep it for proper work
func (c *Custom) Stop() error {
	eg := errgroup.Group{}

	eg.Go(func() error {
		return c.telegram.Stop()
	})

	err := eg.Wait()
	if err != nil {
		return rerrors.Wrap(err)
	}
	return nil
}
